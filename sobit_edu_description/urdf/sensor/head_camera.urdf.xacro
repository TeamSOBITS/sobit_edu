<?xml version="1.0" encoding="UTF-8" ?>
<!-- Reference: https://github.com/M_PIrobot/M_PI-kobuki-git/blob/master/M_PIko_description/urdf/xtion.urdf.xacro -->

<robot name="head_camera" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:include filename="$(find turtlebot_description)/urdf/turtlebot_gazebo.urdf.xacro" />
  <xacro:include filename="$(find turtlebot_description)/urdf/turtlebot_properties.urdf.xacro" />
  
  <!-- Xacro properties -->
  <xacro:property name="xtion_pro_depth_rel_rgb_py" value="0.0270" />
  <xacro:property name="xtion_pro_cam_rel_rgb_py"   value="-0.0220" />

  <!-- Parameterised in part by the values in turtlebot_properties.urdf.xacro -->
  <!-- xtion_pro_cam_py allows for a camera displaced so the depth optical frame aligns with robot center -->
  <xacro:macro name="head_camera" params="prefix parent">
    <joint name="${prefix}_rgb_joint" type="fixed">
      <origin xyz="0.01088 0.02 0.0125" rpy="0 0 0" />
      <parent link="${parent}" />
      <child link="${prefix}_rgb_frame" />
    </joint>
    <link name="${prefix}_rgb_frame" />

    <joint name="${prefix}_rgb_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="${prefix}_rgb_frame" />
      <child link="${prefix}_rgb_optical_frame" />
    </joint>
    <link name="${prefix}_rgb_optical_frame" />

    <joint name="${prefix}_joint" type="fixed">
      <origin xyz="0 ${xtion_pro_cam_rel_rgb_py} 0" rpy="0 0 0" />
      <parent link="${prefix}_rgb_frame" />
      <child link="${prefix}_link" />
    </joint>
    <link name="${prefix}_link">
      <visual>
        <origin xyz="-0.015 0.0035 0.004" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://turtlebot_description/meshes/sensors/xtion_pro_camera.dae" />
        </geometry>
      </visual>
      <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
        <geometry>
        <box size="0.0730 0.2760 0.0720" />
      </geometry>
      </collision>
      <inertial>
        <mass value="0.170" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001152600" ixy="0.0" ixz="0.0"
                 iyy="0.000148934" iyz="0.0"
                 izz="0.001154654" />
      </inertial>
    </link>

    <joint name="${prefix}_depth_joint" type="fixed">
      <origin xyz="0 ${xtion_pro_depth_rel_rgb_py} 0" rpy="0 0 0" />
      <parent link="${prefix}_rgb_frame" />
      <child link="${prefix}_depth_frame" />
    </joint>
    <link name="${prefix}_depth_frame" />

    <joint name="${prefix}_depth_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="${prefix}_depth_frame" />
      <child link="${prefix}_depth_optical_frame" />
    </joint>
    <link name="${prefix}_depth_optical_frame" />

    <!-- RGBD sensor for simulation, same as Kinect -->
    <xacro:turtlebot_sim_3dsensor/>

    <!-- Asus mount -->
    <!-- <joint name="mount_xtion_pro_joint" type="fixed">
      <origin xyz="-0.1024 0.0 0.272" rpy="0 0 0" />
      <parent link="${parent}" />
      <child link="mount_xtion_pro_link" />
    </joint>  
    <link name="mount_xtion_pro_link">
      <visual>
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 0" />
        <geometry>
          <mesh filename="package://turtlebot_description/meshes/sensors/xtion_pro_stack.dae" />
        </geometry>
      </visual>  
      <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
        <geometry>
        <box size="0.0330 0.2760 0.0120" />
      </geometry>
      </collision>
      <inertial>
        <mass value="0.170" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001152600" ixy="0.0" ixz="0.0"
                 iyy="0.000148934" iyz="0.0"
                 izz="0.001154654" />
      </inertial>
    </link> -->

    <!-- <gazebo reference="${prefix}_link">  
      <sensor type="depth" name="camera">
        <always_on>true</always_on>
        <update_rate>20.0</update_rate>
        <camera>
          <horizontal_fov>${60.0*M_M_PI/180.0}</horizontal_fov>
          <image>
            <format>B8G8R8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>8.0</far>
          </clip>
        </camera>
        <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>camera</cameraName>
          <alwaysOn>true</alwaysOn>
          <updateRate>10</updateRate>
          <imageToM_PIcName>rgb/image_raw</imageToM_PIcName>
          <depthImageToM_PIcName>depth/image_raw</depthImageToM_PIcName>
          <pointCloudToM_PIcName>depth/points</pointCloudToM_PIcName>
          <cameraInfoToM_PIcName>rgb/camera_info</cameraInfoToM_PIcName>
          <depthImageCameraInfoToM_PIcName>depth/camera_info</depthImageCameraInfoToM_PIcName>
          <frameName>camera_depth_optical_frame</frameName>
          <baseline>0.1</baseline>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.4</pointCloudCutoff>
        </plugin>
      </sensor>
    </gazebo> -->

  </xacro:macro>
</robot>