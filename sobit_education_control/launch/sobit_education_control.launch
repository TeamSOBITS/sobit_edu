<launch>
    <arg name="urdf_file" default="$(find xacro)/xacro.py '$(find sobit_education_description)/model/urdf/kobuki_hexagons_asus_xtion_pro_offset_education_turtolebot.urdf.xacro'" />
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="True"/>
    <param name="use_gui" value="$(arg gui)"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <param name="robot_description" command="$(arg urdf_file)" />

	<!-- Load joint controller configurations from YAML file to parameter server -->
	<rosparam file="$(find sobit_education_control)/config/position_control.yaml" command="load"/>
    <rosparam file="$(find sobit_education_control)/config/joint_limit.yaml" command="load"/>
    <rosparam file="$(find sobit_education_control)/config/initial_joint_ang.yaml" command="load"/>
    <node name="sobit_education_control" pkg="sobit_education_control" type="sobit_education_control" output="screen"/>
	<!-- load the controllers -->
	<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
		args="arm_trajectory_controller xtion_trajectory_controller joint_state_controller"/>
	<!-- convert joint states to TF transforms for rviz, etc -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>

    <node name ="rviz" pkg="rviz" type="rviz" required="true"/>
</launch>